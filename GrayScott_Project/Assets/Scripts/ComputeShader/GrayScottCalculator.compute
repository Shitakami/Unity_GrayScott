#pragma kernel InitializeTexture
#pragma kernel UpdateGrayScotte


RWTexture2D<float2> Texture;
Texture2D<float4> NoiseTexture;

int InitialQuadSize;
int minThreadhold;
int maxThreadhold;

[numthreads(8, 8, 1)]
void InitializeTexture(uint3 id : SV_DispatchThreadID) {
    
	float2 initValue;

    if(minThreadhold <= id.x && id.x <= maxThreadhold &&
        minThreadhold <= id.y && id.y <= maxThreadhold)
        initValue = float2(0.5, 0.25);
    else
        initValue = float2(1, 0);

	initValue.x += NoiseTexture[id.xy].x * 0.1;
	initValue.y += NoiseTexture[id.xy].y * 0.1;

	Texture[id.xy] = initValue;

}

float dt;
float dx;
float Du;
float Dv;
float f;
float k;
int size;

[numthreads(8, 8, 1)]
void UpdateGrayScotte(uint3 id : SV_DispatchThreadID) {

	float u = Texture[id.xy].x;
	float v = Texture[id.xy].y;

	float2 laplacian =
		Texture[id.xy + uint2(-1, 0)] +
		Texture[id.xy + uint2(1, 0)] +
		Texture[id.xy + uint2(0, -1)] +
		Texture[id.xy + uint2(0, 1)] - 4 * Texture[id.xy];

	laplacian /= (dx*dx);
	
	float dudt = Du * laplacian.x - u * v * v + f * (1.0 - u);
	float dvdt = Dv * laplacian.y + u * v * v - (f + k) * v;
	
	Texture[id.xy] = float2(u + dt * dudt, v + dvdt);
}


